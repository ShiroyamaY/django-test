name: Lint with Ruff

on:
  pull_request:
    branches:
      - main
    paths:
      - "."
  push:
    branches:
      - main
    paths:
      - "."

jobs:
  lint:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: db
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U user -d db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 3

    env:
      SECRET_KEY: django-insecure-3%5#q8(62u&bq#%802%jwqa72gsg_7g&+8$uh32g@w$2!0x)z#
      DEBUG: "True"
      DB_ENGINE: django.db.backends.postgresql
      DB_HOST: localhost
      DB_PORT: 5432
      POSTGRES_DB: db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      CACHE_BACKEND: django_redis.cache.RedisCache
      CACHE_LOCATION: redis://localhost:6379/1
      CELERY_BROKER_URL: redis://localhost:6379
      CELERY_RESULT_BACKEND: redis://localhost:6379

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.4"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install dependencies
        run: |
          uv sync --project . --dev

      - name: Copy .env.example to .env
        run: cp .env.example .env

      - name: Run Ruff
        run: |
          uv run --project . ruff check .

      - name: Run tests
        run: |
          uv run python manage.py test --settings=tms.settings
